import React from 'react'
import Latex from "../../components/Latex/Latex"
import {Proof, ProofHeader, ProofContent, ProofSubsection} from '../../components/Proof/ProofModule'
import {Corollary, Definition, Example, Lemma, Notation, Observation,
    MathTerms, Proposition, Ref, Remark, Theorem}
from '../../components/MathTerms/MathTerms'


const Features = () => {
  return (
    <div>
        <MathTerms>
            <div></div>
            <Proposition id="7.3">
                3-Tensor Isomorphism reduces to Alternating Matrix Space Isometry. Symbolically, isomorphism in U ⊗ V ⊗ W reduces to isomorphism in V ′ ⊗ V ′ ⊗ W ′
                (or even to∧2 V ′ ⊗ W ), where ℓ = dim U ≤ n = dim V and m = dim W , dim V ′ = ℓ + 7n + 3 and dim W ′ = m + ℓ(2n + 1) + n(4n + 2).
            </Proposition>
            <Lemma id="7.5">
                (Constructive version of Baer’s correspondence for matrix groups). Let p be an odd
                prime. Over the finite field F = Fpe , Alternating Matrix Space Isometry is equivalent to
                Group Isomorphism for matrix groups over F that are p-groups of class 2 and exponent p. More
                precisely, there are functions computable in time poly(n, m, log |F|):
                • G : Λ(n, F)m → M(n + m + 1, F)n+m and
                • Alt : M(n, F)m → Λ(m, F)O(m2 )
                such that: (1) for an alternating bilinear map A, the group generated by G(A) is the Baer group
                corresponding to A, (2) G and Alt are mutually inverse, in the sense that the group generated by
                G(Alt(M1, . . . , Mm)) is isomorphic to the group generated by M1, . . . , Mm, and conversely Alt(G(A))
                is pseudo-isometric to A.
            </Lemma>
            
            <Proof>
                <Definition id="4.5">Nested Definition</Definition>
                <ProofHeader> Proof. </ProofHeader>
                <ProofSubsection>
                    <ProofHeader>
                        We adapt this idea to the context of 3-way arrays. Let <Latex expr="$A$"/> be an <Latex expr="$l \times n \times m$"/> 3-way array, with lateral
                        slices <Latex expr="$L_{1},L_{2},...,L_{n}$"/> (each an <Latex expr="$l \times m$"/> matrix). For any vector <Latex expr="$v \in \mathbb{F}^{n}$"/>
                        we get an associated lateral <Latex expr="$L_{v}$"/>, which is a linear combination of the lateral slices as given,
                        namely <Latex expr="$L_{v} \mathrel{\vcenter{:}}= \sum_{j=1}^{n} v_{j}L_{j}$"/> (note that when <Latex expr="$v = \vec{e}_j$"/> is
                        the <Latex expr="$j-th$"/> standard basis vector, the associated lateral matrix is indeed <Latex expr="$L_{j}$"/>). By analogy with adjacency
                        matrices of graphs, <Latex expr="$L_{v}$"/> is a natural analogue of the neighborhood of a vertex in a graph. Correspondingly, we get a notion of “degree,” 
                        which we may define as
                    </ProofHeader>
                    <ProofContent>
                        <Latex expr="$$deg_{A}(v) \mathrel{\vcenter{:}}= rkL_{v} = rk(\sum_{j=1}^{n}) = \text{dim span} \{L_{v}\vec{w}:\vec{w} \in \mathbb{F}^{m}\} = \text{dim span}\{\vec{u}^{t}L_{v}:\vec{u} \in \mathbb{F}^{l}\}$$"/>
                    </ProofContent>
                    <ProofContent>
                        The last two characterizations are analogous to the fact that the degree of a vertex <Latex expr="$v$"/> in a
                        graph <Latex expr="$G$"/> may be defined as the number of “in-neighbors” (nonzero entries the corresponding row of the
                        adjacency matrix) or the number of “out-neighbors” (nonzero entries in the corresponding column).
                        <ProofSubsection>
                            <ProofHeader> Proof. </ProofHeader>
                            <ProofContent>
                                Combine Proposition <Ref id="7.3"/> with Lemma <Ref id="7.5"/>. Note that for this direction
                                of the reduction, we only need the function <Latex expr="$G$"/> from Lemma <Ref id="7.5"/>, which can be computed
                                in time <Latex expr="$poly(n,\log p)$"/>.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
                                incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut
                                aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat
                                nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                            </ProofContent>
                        </ProofSubsection>
                    </ProofContent>
                </ProofSubsection>
            </Proof>
        </MathTerms>
        

      
    </div>
  )
}

export default Features
